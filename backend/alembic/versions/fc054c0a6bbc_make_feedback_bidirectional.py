"""Make feedback bidirectional

Revision ID: fc054c0a6bbc
Revises: 6011dcfd3f06
Create Date: 2025-06-23 16:23:17.136159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fc054c0a6bbc'
down_revision: Union[str, Sequence[str], None] = '6011dcfd3f06'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('feedback', sa.Column('giver_id', sa.Integer(), nullable=False))
    op.add_column('feedback', sa.Column('receiver_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('feedback_manager_id_fkey'), 'feedback', type_='foreignkey')
    op.drop_constraint(op.f('feedback_employee_id_fkey'), 'feedback', type_='foreignkey')
    op.create_foreign_key(None, 'feedback', 'users', ['giver_id'], ['id'])
    op.create_foreign_key(None, 'feedback', 'users', ['receiver_id'], ['id'])
    op.drop_column('feedback', 'manager_id')
    op.drop_column('feedback', 'employee_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('feedback', sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('feedback', sa.Column('manager_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.create_foreign_key(op.f('feedback_employee_id_fkey'), 'feedback', 'users', ['employee_id'], ['id'])
    op.create_foreign_key(op.f('feedback_manager_id_fkey'), 'feedback', 'users', ['manager_id'], ['id'])
    op.drop_column('feedback', 'receiver_id')
    op.drop_column('feedback', 'giver_id')
    # ### end Alembic commands ###
